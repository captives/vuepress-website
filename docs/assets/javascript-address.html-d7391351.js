import { o as openBlock, a as createElementBlock, j as createStaticVNode } from "./app-5c6fb363.js";
import { _ as _export_sfc } from "./framework-cc2b3d55.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="省市区联动" tabindex="-1"><a class="header-anchor" href="#省市区联动" aria-hidden="true">#</a> 省市区联动</h1><h2 id="省市区数据添加头-全部" tabindex="-1"><a class="header-anchor" href="#省市区数据添加头-全部" aria-hidden="true">#</a> 省市区数据添加头[全部]</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">convert</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> item<span class="token punctuation">.</span>level<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> item<span class="token punctuation">.</span>adcode<span class="token punctuation">,</span> <span class="token literal-property property">extra</span><span class="token operator">:</span> index <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>level <span class="token operator">===</span> <span class="token string">&#39;province&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            item<span class="token punctuation">.</span>districts <span class="token operator">=</span> item<span class="token punctuation">.</span>districts <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            item<span class="token punctuation">.</span>districts<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;全部&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token string">&quot;city&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">adcode</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>level <span class="token operator">===</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            item<span class="token punctuation">.</span>districts <span class="token operator">=</span> item<span class="token punctuation">.</span>districts <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            item<span class="token punctuation">.</span>districts<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;全部&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token string">&quot;district&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">adcode</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>level <span class="token operator">===</span> <span class="token string">&#39;district&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">delete</span> item<span class="token punctuation">.</span>districts<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;districts&#39;</span> <span class="token keyword">in</span> item <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>districts <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token function">convert</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>districts<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\ndata<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;全国&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token string">&quot;province&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">adcode</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">extra</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">convert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; 省市区每一项都增加全部/全国</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="省市区移除【全国-全部】项" tabindex="-1"><a class="header-anchor" href="#省市区移除【全国-全部】项" aria-hidden="true">#</a> 省市区移除【全国/全部】项</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>all <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>all<span class="token punctuation">;</span> <span class="token comment">//是否显示全国</span>\n<span class="token keyword">const</span> tree <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>dicInfo<span class="token punctuation">.</span>gx_city<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">filter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>extra<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>children <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                item<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">return</span> all <span class="token operator">?</span> tree <span class="token operator">:</span> <span class="token function">filter</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>', 6);
const _hoisted_7 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_7);
}
const javascriptAddress_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "javascript-address.html.vue"]]);
export {
  javascriptAddress_html as default
};
